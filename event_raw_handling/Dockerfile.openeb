FROM ros:humble
ENV DEBIAN_FRONTEND noninteractive

# run update
RUN apt update -y


# INSTALLING OpenEB

RUN apt -y install apt-utils build-essential software-properties-common wget unzip curl git cmake
RUN apt -y install libopencv-dev libboost-all-dev libusb-1.0-0-dev libprotobuf-dev protobuf-compiler
RUN apt -y install libhdf5-dev hdf5-tools libglew-dev libglfw3-dev libcanberra-gtk-module ffmpeg 

RUN apt -y install libgtest-dev libgmock-dev

RUN apt -y install python3-pip python3-distutils
RUN apt -y install python3.10-dev
RUN python3 -m pip install pip --upgrade
RUN python3 -m pip install "opencv-python==4.5.5.64" "sk-video==1.1.10" "fire==0.4.0" "numpy==1.23.4" "h5py==3.7.0" pandas scipy
RUN python3 -m pip install jupyter jupyterlab matplotlib "ipywidgets==7.6.5" pytest command_runner

# create a directory in /root/pybind11
WORKDIR /root/pybind11

 RUN wget https://github.com/pybind/pybind11/archive/v2.6.0.zip && \
     unzip v2.6.0.zip

WORKDIR /root/pybind11/pybind11-2.6.0/build
RUN  cmake .. -DPYBIND11_TEST=OFF
RUN  cmake --build . 
RUN  cmake --build . --target install
RUN python3 -m pip install "numba==0.56.3" "profilehooks==1.12.0" "pytorch_lightning==1.8.6" "tqdm==4.63.0" "kornia==0.6.8"

WORKDIR /root/openeb_ws

RUN git clone https://github.com/prophesee-ai/openeb.git
WORKDIR /root/openeb_ws/openeb/build
RUN cmake .. -DBUILD_TESTING=OFF
RUN cmake --build . --config Release -- -j$(nproc)
RUN cmake --build . --target install

RUN echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib" >> ~/.bashrc
RUN echo "export HDF5_PLUGIN_PATH=$HDF5_PLUGIN_PATH:/usr/local/lib/hdf5/plugin" >> ~/.bashrc

# install pandas
RUN pip3 install pandas
RUN pip3 install pyarrow
# install bc for bash calculator
RUN apt install bc



# Install ROS 2 driver wrapper

# RUN apt -y install python3-vcstool

# use bash
# SHELL ["/bin/bash", "-c"]

# WORKDIR /root/metavision_driver_ws/src
# RUN git clone https://github.com/ros-event-camera/metavision_driver.git
# RUN vcs import < metavision_driver/metavision_driver.repos

# RUN apt -y install ros-humble-ament-cmake-clang-format

# install ROS 2 rendering wrapper

#WORKDIR /root/metavision_driver_ws/src
#RUN git clone https://github.com/ros-event-camera/event_camera_renderer.git
#RUN vcs import < event_camera_renderer/event_camera_renderer.repos

# build 

#WORKDIR /root/metavision_driver_ws

#RUN . /opt/ros/humble/setup.bash && colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

#WORKDIR /root/